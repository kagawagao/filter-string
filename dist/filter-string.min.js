var filterString=function(r){"use strict";var f=Object.assign||function(r){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(r[e]=t[e])}return r},l=["and","or"],o={op:"and"},u=function(r){return null!=r&&""!==r},n=function(r){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(!r)return"";var t=f({},o,n).op;if(!l.find(function(r){return r===t}))throw new TypeError("Invalid Logic Operator, it should be one of "+l.toString());var e=" "+t+" ";return r.filter(function(r){var n=r.key,t=r.op,e=r.value;return u(n)&&u(t)&&u(e)}).map(function(r){var n=r.key,t=r.value;return n+" "+r.op+" "+t}).join(e)},t=function(r){if(!r)return[];var t=[],e={key:"",op:"",value:""},o=r.split(" "),u=!0,i=!1,a=!1;return o.map(function(r,n){u?(e.key=r,i=!(u=!1)):i?(e.op=r,a=!(i=!1)):a?(e.value=e.value?e.value+" "+r:r,(l.find(function(r){return r===o[n+1]})||null===o[n+1]||void 0===o[n+1])&&(i=u=a=!1,t.push(f({},e)),e.key="",e.op="",e.value="")):u=!0}),t},e={stringify:n,parse:t};return r.stringify=n,r.parse=t,r.default=e,r}({});
