var filterString=function(r){"use strict";var n=Object.assign||function(r){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(r[e]=t[e])}return r},t=["eq","gt","ge","lt","le","ne","in","ni","like"],e=["and","or"],i={op:"and"},o=function(r){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!r)return"";var u=n({},i,o).op;if(!e.find(function(r){return r===u}))throw new TypeError("Invalid Logic Operator, it should be one of "+e.toString());var a=" "+u+" ";return r.filter(function(r){var n=r.op;return t.find(function(r){return n===r})}).map(function(r){var n=r.key,t=r.value;return n+" "+r.op+" "+t}).join(a)},u=function(r){if(!r)return[];var t=[],i={key:"",op:"",value:""},o=r.split(" "),u=!0,a=!1,f=!1;return o.map(function(r,l){u?(i.key=r,u=!1,a=!0):a?(i.op=r,a=!1,f=!0):f?(i.value=i.value?i.value+" "+r:r,(e.find(function(r){return r===o[l+1]})||null===o[l+1]||void 0===o[l+1])&&(f=!1,u=!1,a=!1,t.push(n({},i)),i.key="",i.op="",i.value="")):u=!0}),t},a={stringify:o,parse:u};return r.stringify=o,r.parse=u,r.default=a,r}({});
